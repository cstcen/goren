openapi: 3.0.1
info:
  title: Auth
  description: Auth
  version: "3.0.0"
servers:
  - url: https://api-{env}.xk5.com
    description: Development & Test Environment
    variables:
      env:
        enum:
          - sdev0
          - sdev
          - dev
          - dev2
          - dev3
          - mod
          - stg
        default: sdev0
        description: "sdev0: 藤蔓开发环境, sdev: 研发开发环境, dev/dev2: 研发测试环境"
  - url: https://api.xk5.com
    description: Production Environment
paths:
  /auth/v4.0/oauth2/authorize/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login_type:
                  type: string
                  description: |
                    * `XK5_PWD` - `login_data` 填入 `AuthorizeLoginXk5Pwd`
                  enum:
                    - XK5_PWD
                    - QQ
                    - WECHAT
                response_type:
                  type: string
                  enum:
                    - code
                    - token
                  example: code
                login_data:
                  oneOf:
                    - $ref: "#/components/schemas/AuthorizeLoginXk5Pwd"
                    - $ref: "#/components/schemas/AccessTokenResponse"
              required:
                - login_type
                - response_type
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: The authorization code generated by the authorization server.
                    example: Splx10BeZQQYbYS6WxSbIA
                required:
                  - code
  /auth/v4.0/oauth2/authorize:
    get:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                response_type:
                  type: string
                  enum:
                    - code
                    - token
                  example: code
                client_id:
                  type: string
                  description: The client identifier
                redirect_uri:
                  type: string
                  description: URL Encoding
                  example: https%3A%2Fclient%2Eexample%2Ecom%2Fcb
                scope:
                  type: string
                  description: The scope of the access request
                  example: ""
                state:
                  type: string
                  description: The parameter should be used for preventing cross-site request forgery
                  example: xyz
              required:
                - response_type
                - client_id
      responses:
        302:
          description: Found
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: The authorization code generated by the authorization server.
                    example: Splx10BeZQQYbYS6WxSbIA
                required:
                  - code
  /auth/v4.0/oauth2/token:
    post:
      requestBody:
        description: AccessTokenRequest
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum:
                    - client_credentials
                    - authorization_code
                  description: grant type
                scope:
                  type: string
                  description: The scope of the access request.
                  nullable: true
                code:
                  type: string
                  description: The authorization code received from the authorization server.
                  example: Sp1x10BeZQQYbYS6WxSbIA
                redirect_uri:
                  type: string
                  description: URL Encoding
                  example: https%3A%2Fclient%2Eexample%2Ecom%2Fcb
                client_id:
                  type: string
                  description: The client identifier
                  example: s6BhdRkqt3
              required:
                - grant_type
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenResponse"
components:
  schemas:
    AccessToken:
      type: object
      description: The access token issued by the authorization server.
      allOf:
        - $ref: "#/components/schemas/JsonWebTokenStandard"
    TokenType:
      type: string
      enum:
        - Basic
        - Bearer
      description: The type of the token issued.Value is case insensitive.
      example: Bearer
    ExpiresIn:
      type: integer
      format: int64
      description: The lifetime in seconds of the access token.
      example: 3600
    RefreshToken:
      type: object
      description: The refresh token, which can be used to obtain new access tokens using the same authorization grant.
      allOf:
        - $ref: "#/components/schemas/JsonWebTokenStandard"
    Scope:
      type: string
      description: OPTIONAL, if identical to the scope requested by the client;otherwise, REQUIRED.
    JsonWebTokenStandard:
      type: object
      properties:
        iss:
          type: string
          description: issuer of the JWT
          example: |
            issuer: https://api.xk5.com/
        sub:
          type: string
          description: Subject of the JWT
          example: |
            subject: {env}|{USER_ID}
        aud:
          type: string
          description: |
            audience: Recipient for which the JWT is intended
          example: { yourClientId }
        exp:
          type: integer
          format: int64
          description: |
            expiration time: Time after which the JWT expires
          example: 1490922820
        iat:
          type: integer
          format: int64
          description: |
            issued at time: Time at which the JWT was issued;can be used to determine age of the JWT
          example: 1490886820
    AccessTokenResponse:
      type: object
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        token_type:
          $ref: "#/components/schemas/TokenType"
        expires_in:
          $ref: "#/components/schemas/ExpiresIn"
        refresh_token:
          $ref: "#/components/schemas/RefreshToken"
        scope:
          $ref: "#/components/schemas/Scope"
      required:
        - access_token
        - token_type
    AuthorizeLoginXk5Pwd:
      type: object
      properties:
        login_type:
          type: string
          description: login type
          enum:
            - QQ
            - WECHAT
            - XK5_PWD
        response_type:
          type: string
          enum:
            - code
            - token
          example: code
        user_name:
          type: string
          description: 用户名
          example: foo
        user_pwd:
          type: string
          description: 密码
          example: user123
      required:
        - login_type
        - response_type
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: [ ]