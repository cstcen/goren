// Code generated by Goren DO NOT EDIT.
package main

import (
	"git.tenvine.cn/backend/gore/cmd"
	goreGin "git.tenvine.cn/backend/gore/gin"
	goreHttp "git.tenvine.cn/backend/gore/http"
	"git.tenvine.cn/backend/gore/log"
	goreMiddleware "git.tenvine.cn/backend/gore/middleware"
	"github.com/gin-gonic/gin"
	"net/http"
	"os"
	"strings"
)

func main() {

	if err := cmd.New(setup).Execute(); err != nil {
		os.Exit(1)
	}

}

func setup() error {
	if err := Init(); err != nil {
		return err
	}

	r := goreGin.Instance()
	r.Use(goreMiddleware.RequestID())
	r.Use(goreMiddleware.Logger(func(path string) bool {
		return strings.Contains(path, "/pprof") || strings.Contains(path, "/swagger")
	}))

	{{.PackageNameApi}}.NewOpenapi().RegisterHandlers(r)

	return nil
}

func Init() error {
	if err := gonfig.Setup(); err != nil {
    		return err
    }
    if err := log.SetupDefault(); err != nil {
        return err
    }
    if err := goreGin.Setup(); err != nil {
        return err
    }
    if err := goreHttp.Setup(); err != nil {
        return err
    }
    return nil
}